// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  username      String    @unique
  email         String    @unique
  password      String
  age           Int
  role          String    @default("user")
  badges        Badge[]   @relation("UserBadges")
  progress      ChallengeProgress[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Badge {
  id            String    @id @default(cuid())
  name          String    @unique
  description   String
  imageUrl      String
  requirements  String[]
  category      String
  level         String
  users         User[]    @relation("UserBadges")
  challenges    Challenge[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Challenge {
  id            String    @id @default(cuid())
  title         String
  description   String
  category      String
  difficulty    String
  points        Int
  badge         Badge     @relation(fields: [badgeId], references: [id])
  badgeId       String
  steps         ChallengeStep[]
  progress      ChallengeProgress[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model ChallengeStep {
  id                String    @id @default(cuid())
  order             Int
  instructions      String
  verificationMethod String
  resources         String[]
  challenge         Challenge @relation(fields: [challengeId], references: [id])
  challengeId       String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model ChallengeProgress {
  id            String    @id @default(cuid())
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  challenge     Challenge @relation(fields: [challengeId], references: [id])
  challengeId   String
  status        String
  currentStep   Int       @default(0)
  completedSteps String[]
  startedAt     DateTime  @default(now())
  completedAt   DateTime?
  updatedAt     DateTime  @updatedAt

  @@unique([userId, challengeId])
}
